:ruby
  # NOTE: only 1 is allowed per view/page!
  # If that need ever to be changed, pagination needs to be addressed.

  # TODO: i18n
  default_fallback = "(No content.)"
  elm_anchor = 'resources-page'

  # This is a presenter-spezific decorator for MediaResources!
  pres = media_resources # shortcut
  unless pres and pres.is_a?(Presenters::Shared::MediaResources::MediaResources)
    throw 'ui! need a MediaResourcesIndex Presenter!'
  end

  title ||= nil
  link ||= nil
  # fallback can be a string or just 'true', in which case we use default string
  fallback ||= fallback
  fallback = default_fallback if fallback and not fallback.is_a?(String)
  # mod 'unpaginated' omits all pagination elements (shown by default)
  show_pagination_nav = !classes.map(&:to_s).include?('unpaginated')

  # there are several "view modes", default is grid
  view_modes = [:grid, :tiles]
  classes.push :grid unless view_modes.any? {|mode| classes.include? mode }

  # make thumbnails
  media_resources = pres.resources.map do |get|
    deco('polythumb') { deco('thumbnail', get: get) }
  end

  # # - build an appropriate filter_bar
  # TODO: use sub-collection counts (static for now)
  filter_bar = combo('button-group', {
    mods: ['js-only', 'small'],
    list: [
      {
        text: 'Entries',
        hook: 'entries'
      },
      {
        text: 'Collections',
        hook: 'collections'
      },
      {
        text: 'FilterSets',
        hook: 'filter_sets'
      }
    ]
  })

  # build pagination navigation. TODO: combo
  # get nav info
  pagination = pres.pagination_info
  # binding.pry

  # build nav links links (conserves any other parameters)
  pagination.nav = ['previous_page', 'next_page'].map.with_object({}) do |id, res|
      if pagination[id]
        res[id] = url_for(params.merge(page: pagination[id], anchor: elm_anchor))
      end
    end


-# a list for each kind of resource.
  - skips empty lists
  - rendered as consective units
  - re-uses pagination elements
  - TODO: ujs: use filterbar ui + tab logic
  - TODO: ujs: pagination
  - TODO: total_count, count by resource type

.POLYBOX.pbl{id: elm_anchor}
  - if title
    = title

  - return fallback if pres.empty?

  %ul.ui-resources{class: classes}

    %li.ui-resources-page.mhn.mtn.pbm

      - if show_pagination_nav && pagination.total_pages > 1
        -# TODO: .no-js
        %span.ui-resources-page-counter.ui-pager.small
          = "Page #{pagination.current_page} of #{pagination.total_pages}, "
          = "#{pagination.total_count} Resources total"


      -# the actual box of items
      %ul.ui-resources-page-items
        - media_resources.each do |thumb|
          = thumb

    - if show_pagination_nav && pagination.nav.any?
      .row
        - pagination.nav.each do |id, link|
          = component('button', text: id.to_s.humanize,
                               href: link)
