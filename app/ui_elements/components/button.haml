:ruby
  text ||= nil
  icon ||= nil
  type ||= nil
  method ||= nil
  html_tag = link ? 'a' : 'button'
  button_class = \
    case
    when classes.include?('button-primary') then 'primary-button'
    when classes.include?('button-tertiary') then 'tertiary-button'
    else 'button'
    end
  classes.delete(button_class)

  classes.push(button_class) if button_class
  classes.push('active') if defined?(active) && active == true

  properties = {
    class: classes,
    type: type,
    method: method
  }.merge(props)

  properties = properties.merge(link) if link

  def build_node_by_type(html_tag, properties, &block)
    # uses either rails helper or plain haml
    if properties[:method] && properties[:href]
      button_to(properties[:href], properties, &block)
    else
      capture_haml { haml_tag(html_tag, properties, &block) }
    end
  end


= build_node_by_type(html_tag, properties) do
  - if icon.present?
    = component("icon.#{icon.to_s}")
  = text
  = block_content if defined?(block_content)
