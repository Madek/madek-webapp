<%=

is_clipboard = section[:id] == :clipboard
is_unpublished_entries = section[:id] == :unpublished_entries
ui_component = !is_clipboard ? 'Deco.MediaResourcesBox' : 'Views.My.ClipboardBox'

with_box = false
mods = ['unpaginated']
fallback = section[:is_empty?] ? true : false

react(
  'AsyncDashboardSection',
  component: ui_component,
  # NOTE: we don't want to fetch the actual subsection, which has diff. content.
  #       instead, we use the 'sparse request', to just fetch what we need.
  url: my_dashboard_path(section[:id], format: :json) +
        '?___sparse={"' + section[:id].to_s + '":{}}',
  json_path: section[:id].to_s,
  fallback_url: my_dashboard_section_path(section[:id]),
  initial_props: {
    mods: mods,
    withBox: with_box,
    fallback: fallback,
    enableOrdering: true,
    enableOrderByTitle: true,
    initial: {
      show_filter: false,
      is_clipboard: is_clipboard
    }})

  %>
