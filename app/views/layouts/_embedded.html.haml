-# Base template for embedded player, only used inside an iframe (inside webapp and externally)
-# NOTE: when changing this, also see `_fullscreen.html.haml` if the same changes should be applied there as well

:ruby
  # NOTE: careful with access to `settings` comes from DB and can fail hard
  extra_content = begin; settings.webapp_html_extra_content; rescue; end || {}
  site_title = begin; localize(settings.site_titles); rescue; end
  site_title ||= 'Madek' # fallback
  title = begin; @get[:title]; rescue; end
  lang = locale
  body_data = begin; { 'referer-host': @get[:embed_config]['referer_info']['host'] }; rescue; end || {}

!!!
%html{lang: lang}
  %head
    %meta{charset: 'utf-8'}

    -# configured extra tags for head start:
    = find_and_preserve(extra_content[:head_start].html_safe) if extra_content[:head_start].present?

    %title= title ? "#{strip_tags(title)} | #{site_title}" : site_title

    :javascript
      document.getElementsByTagName('html')[0].classList.add('has-js')
      #{FrontendAppConfig.to_js}

    = stylesheet_link_tag 'embedded-view', media: 'all'

    -# configured extra tags for head end:
    = find_and_preserve(extra_content[:head_end].html_safe) if extra_content[:head_end].present?

  %body{data: ({embedded_view: true}).merge(body_data)}

    -# configured extra content for body start:
    = find_and_preserve(extra_content[:body_start].html_safe) if extra_content[:body_start].present?

    = content_for(:body)

    - if Rails.env == 'development'
      = javascript_include_tag 'dev-bundle-embedded-view'
    - else
      = javascript_include_tag 'bundle-embedded-view'

    -# configured extra content for body end:
    = find_and_preserve(extra_content[:body_end].html_safe) if extra_content[:body_end].present?
