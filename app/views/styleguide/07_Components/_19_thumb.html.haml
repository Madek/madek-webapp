-# TODO: js; hover

:ruby
  element = {
    name: 'Default thumbnail style, independent from visualization mode',
    todo: true,
    cssSelector: '.ui-thumbnail',
    cssFile: '_ui-thumb.scss',
    section: '7.19',
    # example
    examples: [
      {
        locals: {
          picture: asset_path('styleguide/media-entry-4.jpeg'),
          href: nil, # optional
          # NOTE: last 2 classes not really needed, but present before
          mods: ['media-entry', 'video', 'ui-resource-thumbnail', 'pan'],
          title: 'Name that can easily go onto 2 lines',
          # not actually shown, but was present in old styleguide:
          badge_top_left: component('icon.privacy-private',
                            text: 'This media is private'),
          badge_top_right: nil
        }
      },
      {
        locals: {
          mods: ['filter-set'],
          href: '#',
          title: 'Name that can easily go onto 2 lines',
          picture: asset_path('thumbnails/set.png'),
          badge_top_right: component('icon.filter',
                            text: 'This is a Filterset'),
        }
      },
      {
        locals: {
          mods: ['media-set'],
          picture: asset_path('thumbnails/document.png.png'),
          title: 'Name that can easily go onto 2 lines',
          # not actually shown, but was present in old styleguide:
          badge_top_left: component('icon.privacy-group',
                            text: 'This media is shared with a group')
        }
      },
      {
        locals: {
          href: '#',
          # NOTE: last 2 classes not really needed, but present before
          mods: ['media-entry', 'video', 'ui-resource-thumbnail', 'pan'],
          picture: asset_path('thumbnails/document.pdf.png'),
          title: 'Name that can easily go onto 2 lines',
          # not actually shown, but was present in old styleguide:
          badge_top_left: component('icon.privacy-open',
                            text: 'This media is public')
        }
      }
    ]
  }

= render_partial('element', element) do |element|

  - element[:examples].each do |example|

    = render_partial('example') do

      = component('thumbnail', example[:locals])
