:ruby
  header = {

    # - responsive brand section on the left:
    brand: {
      instance_name: settings.site_title,
      name: settings.brand_text,
      logo: settings.brand_logo_url.empty? ? nil : {
        src: settings.brand_logo_url,
        # logo is just the visual representation of the
        # (already present) 'name', so it can be ignored:
        alt: ''
      },
      href: root_path
    },

    # - main site menu section, middle
    menu: component('tabs-bar',
      id: 'example_tabs',
      mods: ['primary', 'large'],
      list: {
        my: {
          text: t(:sitemap_my_archive),
          href: my_dashboard_path,
          active: link_active?(my_dashboard_path)
        },
        explore: {
          text: t(:sitemap_explore),
          href: explore_path,
          active: (link_active?(explore_path) or
            link_active?(media_entries_path) or
            link_active?(collections_path) or
            link_active?(filter_sets_path))
        },

        # TMP: disabled
        # entries: {
        #   text: t(:sitemap_media_entries), href: media_entries_path
        # },
        # collections: {
        #   text: t(:sitemap_collections), href: collections_path
        # },
        # filter_sets: {
        #   text: t(:sitemap_filter_sets), href: filter_sets_path
        # },
        # search: {
        #   icon: 'icon-lens.bright',
        #   text: 'Suchen', href: '#/search'
        # },
        # help: {
        #   icon: 'icon-nav-help', href: '#/help'
        # }

        admin: !current_user.try(:admin) ? nil : {
          text: t(:sitemap_admin),
          icon: 'icon-bang',
          href: admin_root_path
        },

        api: {
          text: t(:sitemap_api),
          icon: 'icon-api',
          href: "/api/browser/index.html#/api"
        },


        help: { icon: 'icon-nav-help', href: settings.support_url }
      }
    ),

    # user/login section, right
    user: render(current_user ? 'user_menu' : 'login_menu')
  }

= combo('header', header)
