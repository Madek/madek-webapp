:ruby
  tag_mods = ['small','ellipsed']
  collection_show = {}

  favor_button = (@get.policy(current_user).disfavor? and @get.favored) ?
    component('button',
      link: disfavor_collection_path,
      method: :patch,
      icon: :favorite)
    : nil

  disfavor_button = (@get.policy(current_user).favor? and !@get.favored) ?
    component('button',
      link: favor_collection_path,
      method: :patch,
      icon: :nofavorite)
    : nil

  action_buttons =[favor_button, disfavor_button].compact

  collection_show[:header] = \
    component('page-header',
      icon: component('icon.set'),
      text: @get.title,
      actions: action_buttons
    )

  collection_show[:overview] = \
    deco('resource_show_overview',
      mods: 'ui-set-overview',
      preview: \
        component('thumbnail', mods: ['media-set'],
          title: @get.title,
          picture: @get.preview_thumb_url),
      content: \
        combo('metadata-box',
          mods: 'ui-summary-table.ui-set-summary.compact',
          # TODO: build this list in a presenter?
          # @get.metadata => [ [key, value], [key, value] ]
          list: [[t(:resource_meta_data_title), @get.title, 'title-l'],
                 [t(:resource_meta_data_description), @get.description],
                 [t(:resource_meta_data_keywords), combo('tag-cloud.label', list: @get.keywords,
                                                       mods: tag_mods)],
                 [t(:resource_meta_data_responsible),
                  deco('person-tag-list', person: @get.responsible,
                                          mods: tag_mods)]
                ])
    )

- collection_show[:more_info] = capture_haml do
  - if @get.relations.any?
    .ui-container.midtone.rounded-bottom.pal.well
      %h3.title-l.separated.mbm
        = t(:relations_title)

      %h4.title-m.mbm= t(:relations_parents_title)
      = react('Deco.MediaResourcesBox',
        get: @get.relations.parent_media_resources)

      %h4.title-m.mbm= t(:relations_siblings_title)
      = react('Deco.MediaResourcesBox',
        get: @get.relations.sibling_media_resources)


    .ui-separator.mbl

  -# TODO: t(:collection_media_resources_title)
  = react('Deco.MediaResourcesBox',
    get: @get.relations.child_media_resources,
    interactive: true,
    initial: { show_filter: false },
    mods: [{bordered: false}, 'rounded-bottom'])

= deco('resource_show', collection_show)
