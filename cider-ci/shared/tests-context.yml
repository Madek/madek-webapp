name: Madek Tests

task-defaults:
  eager-trials: 1
  max-auto-trials: 3

  environment-variables:
    RAILS_ENV: test
    LANG: "en_US.UTF-8"

  git-options:
    submodules:
      clone: True
      timeout: 60

  trial-attachments:
    logs:
      glob: 'log/*.log'
      content-type: text/plain
    coverage_resultset:
      glob: 'coverage/.resultset.json'
      content-type: application/json
    coverage_last_run:
      glob: 'coverage/.last_run.json'
      content-type: application/json
    styleguide_artefacts:
      glob: 'tmp/styleguide-ref.tar.gz'
      content-type: application/x-compressed
    styleguide_hashes_new:
      glob: 'tmp/styleguide-shasums.txt'
      content-type: text/plain
    json_ld_dump:
      glob: 'tmp/ld_dump.json'
      content-type: application/json

  traits:
    firefox-esr: true
    imagemagick: true
    jruby-9000: true
    linux: true
    nodejs: true
    postgresql: true
    rbenv: true
    ruby-2.2: true
    ruby: true
    tightvnc: true

  ports:
    XVNC_PORT:
      inet_address: "localhost"
      min: 5900
      max: 5999

  scripts:

    configure-database:
      body: |
        #!/usr/bin/env ruby
        require 'yaml'
        config = \
          { 'test' =>
            { 'adapter' => 'postgresql',
              'encoding' => 'unicode',
              'host' => 'localhost',
              'pool' => 3,
              'username' => ENV['PGUSER'],
              'password' =>  ENV['PGPASSWORD'],
              'database' => "madek_v3_test_#{ENV['CIDER_CI_TRIAL_ID']}"}}
        File.open('config/database.yml','w') { |file| file.write config.to_yaml }

    bundle-mri:
      exclusive-executor-resource: bundler
      body: bundle

    bundle-jruby:
      environment-variables:
        RBENV_VERSION: jruby-9000
      exclusive-executor-resource: bundler_jruby-9000
      body: bundle


    npm:
      exclusive-executor-resource: npm-modules
      body: |
        #!/usr/bin/env bash
        mkdir -p "/tmp/MADEK_node_modules_${CIDER_CI_TREE_ID}/node_modules"
        ln -s "/tmp/MADEK_node_modules_${CIDER_CI_TREE_ID}/node_modules" "node_modules" \
        && npm install

    create-database:
      body: bundle exec rake db:reset
      start-when:
      - script: npm
      - script: bundle-mri
      - script: configure-database

    start-vnc:
      body: tightvncserver ":$XVNC_PORT"  -geometry 1024x768 -rfbport "$XVNC_PORT"  -interface '127.0.0.1'

    test:
      body: |
        export DISPLAY=":$XVNC_PORT" \
        && rm -rf coverage \
        && ruby -v \
        && bundle exec rspec $CIDER_CI_TASK_FILE
      start-when:
      - script: start-vnc
      - script: create-database
      - script: npm
      - script: bundle-jruby

    delete-database:
      body:  bundle exec rake db:pg:terminate_connections db:drop
      ignore-state: true
      start-when:
      - script: test
        states: [aborted, passed, failed, skipped]

    stop-vnc:
      body: tightvncserver -kill ":$XVNC_PORT" -clean
      ignore-state: true
      start-when:
      - script: test
        states: [aborted, passed, failed, skipped]


subcontexts:

- name: Plain
  _cider-ci_generate-tasks:
    include-match: spec/.*_spec.rb
    exclude-match: spec/features.*_spec.rb


- name: Features

  task-defaults:
    priority: 2

  tasks:

    "spec/features/styleguide_spec.rb":
      priority: 3

    "json_ld_integration":
      name: 'JSON-LD Dump & Integration'
      environment-variables:
        RAILS_DUMP_LIMIT: 1000
      scripts:
        test:
          body: "bundle exec rails runner ./bin/lodz_dump.rb > ./tmp/ld_dump.json"

    "spec/features/custom_root-url_spec.rb":
      environment-variables:
        RAILS_RELATIVE_URL_ROOT: /my-test

  _cider-ci_generate-tasks:
    include-match: spec/features.*_spec.rb


# Just one task, use for prototyping and debuging `.cider-ci.yml`
#
#  tasks:
#    spec/features/my_dashboard_spec.rb:
#      environment-variables:
#        CIDER_CI_TASK_FILE: spec/features/my_dashboard_spec.rb
